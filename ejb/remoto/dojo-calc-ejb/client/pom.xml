<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jcb.dojo.ejb</groupId>
		<artifactId>wildfly-ejb-remote</artifactId>
		<version>10.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>wildfly-ejb-remote-client</artifactId>
	<packaging>jar</packaging>
	<name>ejb-remote - client</name>
	<description> Java client for remote EJB</description>
	<url>http://wildfly.org</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<version.wildfly>10.0.0.Final</version.wildfly>
		<version.jboss.spec.javaee.7.0>1.0.3.Final</version.jboss.spec.javaee.7.0>

		<!-- WildFly Maven plug-in to deploy your WAR to a local WildFly container -->
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>


		<!-- other plug-in versions -->
		<version.exec.plugin>1.2.1</version.exec.plugin>
		<version.war.plugin>3.0.0</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 7 APIs we want to use -->
			<!-- JBoss distributes a complete set of Java EE 7 APIs including a Bill
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
				of artifacts. We use this here so that we always get the correct versions
				of artifacts. Here we use the jboss-javaee-7.0 stack (you can read this as
				the JBoss stack of the Java EE 7 APIs). You can actually use this stack with
				any version of WildFly that implements Java EE 7, not just WildFly 10! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.jboss.spec.javaee.7.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-ejb-client-bom</artifactId>
				<version>${version.wildfly}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>

	</dependencyManagement>

	<dependencies>

		<!-- Import the transaction spec API, we use runtime scope because we aren't
			using any direct reference to the spec API in our client code -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.2_spec</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Import the EJB API, we use runtime scope because we aren't using any
			direct reference to EJB spec API in our client code -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- We depend on the EJB remote business interfaces of this application -->
		<dependency>
			<groupId>org.jcb.dojo.ejb</groupId>
			<artifactId>wildfly-ejb-remote-server-side</artifactId>
			<type>ejb-client</type>
			<version>${project.version}</version>
		</dependency>

		<!-- Include the ejb client jars -->
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-ejb-client-bom</artifactId>
			<type>pom</type>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<!-- Add the maven exec plug-in to allow us to run a java program via
				maven -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${version.exec.plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory>
					<arguments>
						<!-- automatically creates the classpath using all project dependencies,
							also adding the project build directory -->
						<argument>-classpath</argument>
						<classpath>
						</classpath>
						<argument>org.jcb.dojo.ejb.cliente.RemoteEJBClient</argument>
					</arguments>
				</configuration>
			</plugin>
			<!-- build standalone exe jar -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>org.jcb.dojo.ejb.cliente.RemoteEJBClient</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- The WildFly plug-in deploys your apps to a local WildFly container -->
			<!-- Disabling it here means that we don't try to deploy this POM! -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${version.wildfly.maven.plugin}</version>
				<inherited>true</inherited>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>

	</build>

</project>
